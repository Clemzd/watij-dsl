grammar fil.emn.Watij with org.eclipse.xtext.common.Terminals

generate watij "http://www.emn.fil/Watij"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

//Root
Program:
	include=Include
	(procedure+=Procedure)* & ((mainProcedure+=Block)*';');

//The browser choice 	
Include:
	'browser = require ' browser=Browser ';';
	
// Functions that can be called in the main program
Procedure:
	'procedure' name=ID '(' ( parameter+=Parameter (', ' parameter+=Parameter)* )? ')'
	'{' 
		block+=Block* ';'
	'}'
;

CallProcedure:
	procedure=[Procedure]'(' ( param+=VariableFunction (', ' param+=VariableFunction)* )? ')'
;

Block:
	(variableStringOrRead=VariableStringOrRead | varInt=VariableInt | varBoolean=VariableBool | loop=Loop | conditional=Conditional | begin=Begin | call=CallProcedure)
;

// parameters in procedure
Parameter:
	name=ID
;

Loop:
	'do'
	'{'
		(block+=Block)*';'
	'}'
	'while(' cond=Condition ')';
	
Conditional:
	'if''(' condition=Condition ')'
	'{'
		(block+=Block)*';'
	'}'
(
	'else'
		'{'
		(blockElse+=Block)*';'
	'}')?
;

Condition:
	(compare=CompareExpression)| (=>boolean=BooleanExpression)
;

ComputeExpression:
	minusOp=MINUS_OP? subExpression=SubExpressionInt (computeOp=COMPUTE_OP right=ComputeExpression)?
;

CompareExpression:
	computeExpression=ComputeExpression ((compareOp=COMPARE_OP | bool_Op=EQUALITY_OP) right=ComputeExpression)?
;

BooleanExpression:
 	 stringBooleanExpression=StringBooleanExpression | (=>boolBooleanExpression=BoolBooleanExpression)
;

StringBooleanExpression:
	SubExpressionString=SubExpressionString (boolOp=EQUALITY_OP right=StringBooleanExpression)?
;

BoolBooleanExpression:
	    notOp=NOT_OP? SubExpressionBool=SubExpressionBool (boolOp=AND_OR_OP right=BoolBooleanExpression)?
;

SubExpressionInt:
	int=INT |  varInt=[VariableInt]
;

SubExpressionString:
	string=STRING | varString=[VariableString]
;

SubExpressionRead:
	string=STRING | varStringOrRead=[VariableStringOrRead]
;

SubExpressionBool:
	bool=BOOL | varBool=[VariableBool]
;

//Start syntax + first url
Begin:
	'browser' operation+=Operation+;

/*Definitions of operations*/
Operation:
	goto=Goto | click=Click | fill=Fill | select=Select | close=Close;

	//Change of url
Goto:
	'.goto(' url=URL ')'
;

	//Fill in something
Fill:
	'.fill(' (findMethod=FindMethod '=')? reference=SubExpressionString ', ' (value= STRING | INT) ')'
;

	//Click on a button
Click: 
	'.click(' (findMethod=FindMethod '=')? reference=(SubExpressionRead) ')'
;

Select:
	'.select(' optionText=SubExpressionString ')'
;

Read:
	'.read(' ('type='type=ElementType | (findMethod=FindMethod '=')? reference=SubExpressionString) ')'
;

	//Ending operation	
Close:
	'.close()';

enum FindMethod:
	unspecified | id | name | text | src
;
	//The different browsers
enum Browser:
	IE='InternetExplorer' | FIREFOX='Firefox' | CHROME='Chrome'
; 
	
enum ElementType:
	unspecified | checkbox | img
;

VariableString:
	'var' name=ID '=' string=STRING
;

VariableStringOrRead:
	'var' name=ID '=' (string=STRING | 'browser'varRead=Read)
;

VariableInt:
	'var' name=ID '=' computeExpression=ComputeExpression
;

VariableBool:
	'var' name=ID '=' bool=BOOL
;

VariableFunction:
	valueString=STRING | valueInt=INT | valueBool=BOOL
;

terminal COMPUTE_OP: 
	"/" | "*" | "+" | "-" 
;

terminal COMPARE_OP:
	">" | "<"
;

terminal AND_OR_OP:
	"&&" | "||"
;

terminal EQUALITY_OP:
	"==" | "!="
;

terminal NOT_OP:
	"!"
;

terminal MINUS_OP:
	 "(-)"
;

terminal BOOL:
	"true" | "false"
;	
	
terminal URL:
('a'..'z')+ '://' // Protocol
 
    ( // Hostname
    (
        ('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+
    ) |
    (	
        ('a'..'z'|'A'..'Z')
        (
            'a'..'z'|'A'..'Z'|
            '0'..'9'|
            '$'|
            '-'|
            '_'|
            (
                '\\'
                ('0'..'9'|'a'..'f'|'A'..'F')
                ('0'..'9'|'a'..'f'|'A'..'F')
            ) |
            (
                '%'
                ('0'..'9')
                ('0'..'9')
            )
        )*
        (
            '.'
            ('a'..'z'|'A'..'Z')
            (
                'a'..'z'|'A'..'Z'|
                '0'..'9'|
                '$'|
                '-'|
                '_'|
                (
                    '\\'
                    ('0'..'9'|'a'..'f'|'A'..'F')
                    ('0'..'9'|'a'..'f'|'A'..'F')
                ) |
                (
                    '%'
                    ('0'..'9')
                    ('0'..'9')
                )
            )*
        )*
    )
)
(':' ('0'..'9')+)? // Portnumber
 
    ('/'
    (
        'a'..'z'|'A'..'Z'|
        '0'..'9'|
        '$'|
        '-'|
        '_'|
        '~'|
        '+'|
        '.'|
        (
            '\\'
            ('0'..'9'|'a'..'f'|'A'..'F')
            ('0'..'9'|'a'..'f'|'A'..'F')
        ) |
        (
            '%'
            ('0'..'9')
            ('0'..'9')
        )
    )*
)* // Path
 
    ('?'
    (
        'a'..'z'|'A'..'Z'|
        '0'..'9'|
        '$'|
        '-'|
        '_'|
        '='|
        '&'|
        ';'|
        (
            '\\'
            ('0'..'9'|'a'..'f'|'A'..'F')
            ('0'..'9'|'a'..'f'|'A'..'F')
        ) |
        (
            '%'
            ('0'..'9')
            ('0'..'9')
            )
        )+
 
        ('+'
        (
            'a'..'z'|'A'..'Z'|
            '0'..'9'|
            '$'|
            '-'|
            '_'|
            '='|
            '&'|
            ';'|
            (
                '\\'
                ('0'..'9'|'a'..'f'|'A'..'F')
                ('0'..'9'|'a'..'f'|'A'..'F')
            ) |
            (
                '%'
                ('0'..'9')
                ('0'..'9')
            )
        )+
    )*
)?; // Query
